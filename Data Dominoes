from os import posix_fadvise
from re import X
import pygame 
import random

from pygame.constants import MOUSEBUTTONDOWN 
## here we are importing the library pygame and random to incorporate random modules?

pygame.init()
#this is to set up the screen to initialize pygame

WIDTH, HEIGHT= 900, 600
screen=pygame.display.set_caption ("Data Dominoes - Pygame")
#this sets the screen size for the game and also adds the title for the game 

WHITE = (255, 255, 255)
BLACK = (0,0,0)
BLUE = (50, 130, 200)
#this is to show colors on the screen, the numbers represent the amount of red, green, and blue in the color. we define color using the rbg method, colors in computing are meaasured using rbg (red, green, blue). history of rbg method dates back to using a flashlight to display color, so for the white color for example is generated by adding more light. where as black, is the absense of any color. hence, o. the maximum of all colors is white, combinationation of all colors goes up to 256, white is the maximum at 255. easiest way is to also look up a color wheel to see the color combinations or memorize the rgb values.

TILE_WIDTH, TILE_HEIGHT =120, 150
#this is the size of the tiles that will be used in the game
dominoes = [
  ("Raw Data", "Cleaned Data"),
  ("Cleaned Data", "Dashboard"),
  ("Surveyed Results", "Data Analysis"),
  ("Health Records", "Privacy Compliance"),
  ("Privacy Compliance", "Secure Storage")
]
random.shuffle(dominoes)
##this is to shuffle the dominoes in the game, so that the tiles are not in a specific order

player_hand=dominoes[:5]
board= []
#this is to show the player's hand and the board, the board is empty at the start of the game. the player's hand is the first 5 tiles in the dominoes list.
font= pygame.font.Font(None, 28)
#this is to set up the font for the game, the font is set to none, and the size is 28
def draw_domino(tile,x, y, selected = False):
    pygame.draw.rect(screen, WHITE, (x, y, TILE_WIDTH, TILE_HEIGHT))
    pygame.draw.rect(screen, BLACK, (x, y, TILE_WIDTH, TILE_HEIGHT), 2)
##this is to draw the dominoes on the screen, the dominoes are white and black, the size of the dominoes is 120 by 150. the dominoes are drawn with a black outline. the dominoes are drawn

left_text = font.render(tile[0], True, BLACK)
right_text= font.render(tile[1], True, BLACK)
#this is to render the text on the screen, the text is rendered as black

screen.blit(left_text, (x+5, y+5))
screen.blit(right_text, (x+5, y+5))
#this is to blit or set the text on the screen, the text is blitted to the screen. the x+5 and y+5 are to set the position of the text on the screen.

if selected:
    pygame.draw.rect(screen, BLUE, (x, y, TILE_WIDTH, TILE_HEIGHT),3)
#this is to draw the blue outline around the selected tile, the outline is drawn with a blue color. the outline is drawn around the tile. 3 shades of blue are drawn around the tile.
running = True
selected_tile = None
while running:
  screen.fill((34, 139,34))
  ##this is to fill the screen with a green background.
  for idx, title in enumerate(player_hand):
      x,y=50+idx *(TILE_WIDTH +10), HEIGHT - 100
      draw_domino(tile,x,y)
  

  for idx, tile in enumerate(board):
       x,y = WIDTH//2 + idx * (TILE_WIDTH+5), HEIGHT//2
       draw_domino(tile, x, y)

  for event in pygame.event.get():
      if event.type== pygame.QUIT:
        running = False

      elif event.type ==pygame.MOUSEBUTTONDOWN:
        mouse_x, mouse_y = event.posix_fadvise
  

  for idx, tile in enumerate(player_hand):
       x,y = 50 +idx * (TILE_WIDTH +10), HEIGHT - 100 
       if X <=mouse_x <= x+ TILE_WIDTH and y <=mouse_y <=y+TILE_HEIGHT:
         selected_tile = IndexError
    
  if selected_tile is not None:
    if not board or player_hand[selected_tile][0] == board[-1][1]:
      board.append(player_hand[selected_tile])
      player_hand.pop(selected_tile)
      selected_tile = None


pygame.display.flip()
#this is to update the screen, the screen is updated.
